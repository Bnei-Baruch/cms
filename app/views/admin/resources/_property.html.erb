<div class="property">
	<% @property = property # for use with error_messages_for only
	errors = rp_error_messages_for :property
	obj_id = 'obj_' + property.object_id.to_s
	label_options = errors.empty? ? {:for => obj_id} : {:class => 'fieldWithErrors', :for => obj_id}
	%>
	
   <% cms_fields_for "resource[my_properties][]", property do |f| %>

		<%= f.hidden_field(:property_type, :index => nil) %>
		<%= f.hidden_field(:property_id, :index => nil) %>
		<%= f.hidden_field(:id, :index => nil) %>

		<%= content_tag(:label, property.name, label_options) %>
		<%= errors %>
		<% case data_type 
			 when 'number', 'string': %>
				<%= f.text_field(:value, :index => nil, :size => 57, :id => obj_id) %>
			<% when 'boolean': %>                                          
				<%chacked = %w{ t true 1}.include?property.value%>
				<%= check_box_tag :value_dummy, property.value, chacked, {:id => nil, :class => 'property_checkbox'} %><%= f.hidden_field :value, :index => nil%>
			<% when 'date': %>
				<%= f.calendar_date_select :value, 
				:time => false, 
				:popup => :force,
				:size => 57,
				:name => 'resource[my_properties][][value]',
				:id => obj_id %>
				<%= link_to_function "Reset Date" do |page|
						page[obj_id].value = "" 
				    end  %>
			<% when 'timestamp': %>
				<%= f.calendar_date_select :value, 
				:time => true, 
				:popup => :force,
				:size => 57,
				:name => 'resource[my_properties][][value]',
				:id => obj_id %>
				<%= link_to_function "Reset Date" do |page|
						apage[obj_id].value = ""
				    end  %>
			<% when 'list': %>
				<%= f.select(:value, @property.property.list.values_for_select, {}, :index => nil, :id => obj_id) %>
			<% when 'plaintext': %>
				<%= f.text_area(:value, :index => nil, :id => obj_id) %>
			<% when 'text': %>
				<%= f.text_area(:value, :index => nil, :class => 'mce', :id => obj_id) %>
			<% when 'file': %>
				<% original = @property.original %>
				<% if original %>
					Original: <%= "#{original.filename}: #{original.mime_type.split('/').last} of #{original.size} bytes" %><br/>
					<% if original.is_image? %>
            <%= image_tag	admin_attachment_url(original) %>
            <hr/>
            <% if myself = @property.myself %>
              Self: <%= "#{myself.filename}: #{myself.mime_type.split('/').last} of #{myself.size} bytes" %><br/>
              <%= image_tag	admin_attachment_url(myself) %>
              <hr/>
            <% end %>
            <% @property.thumbnails.each {|img|%>
              Attachment: <%= "#{img.filename}: #{img.mime_type.split('/').last} of #{img.size} bytes" %><br/>
              <%= image_tag	admin_attachment_url(img) %>
              <hr/>
            <% } %>
          <% end %>
				<% end %>
				<%= f.file_field(:value, :index => nil) %>
		<% end %>
		<% if data_type = 'file' && original %>
			<br/>Remove:<br/>
			<%= f.check_box :remove, {:index => nil, :class => 'property_checkbox'}, 't', 'f' %>
		<% else %>
			<%= f.hidden_field(:remove, :index => nil) %>
		<% end%>
	
	<% end %>
</div>
